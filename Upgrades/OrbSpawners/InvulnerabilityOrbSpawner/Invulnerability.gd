extends Node2D

export(Resource) var bobber_stats = bobber_stats as BobberStats

onready var duration = $Duration

var previous_damage_taken_multiplier : float
var bobber_reference : Bobber

func _ready() -> void:
	if get_parent() != null:
		bobber_reference = get_parent()
	if bobber_reference.blink_animation_player.current_animation == "EndInvulnerable":
		bobber_reference.change_immune_stack_by(-1)
		# This is done for the scenario where u trigger this in the midst of EndInvulnerable's animation.
		# The immune stack is only decreased to 0 at the end of the EndInvulnerable animation.
		# if not for this, the change in immune stack will never be done, causing you to forever be invulnerable
		# as is_immune will forever be > 0
	bobber_reference.blink_animation_player.play("Invulnerable")


func set_incremented_values(new_incremented_values) -> void:
	duration.wait_time = new_incremented_values[0]
	duration.start()


func _physics_process(delta):
	if duration.time_left > 0:
		if bobber_stats.reel_damage > 0:
			bobber_stats.previous_reel_damage = bobber_stats.reel_damage
			bobber_stats.reel_damage = 0


func _on_Duration_timeout():
	bobber_stats.reel_damage = bobber_stats.previous_reel_damage
	bobber_stats.previous_reel_damage = 0
	if bobber_reference.is_immune == 1: # last immune stack to reduce to end invulnerability
		bobber_reference.blink_animation_player.play("EndInvulnerable")
		# decrementing is_immune is handled in the blink_animation_player
	else:
		bobber_reference.change_immune_stack_by(-1)
	queue_free()
